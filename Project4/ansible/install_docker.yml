---
- name: Install Docker on Ubuntu
  hosts: all
  become: yes
  vars:
    docker_gpg_key: "/etc/apt/keyrings/docker.asc"

  tasks:
    # Update apt package index
    - name: Update apt package index
      apt:
        update_cache: yes

    # Install prerequisite packages
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    # Create directory for GPG key
    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    # Download Docker's official GPG key
    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: "{{ docker_gpg_key }}"
        mode: '0644'
        timeout: 30
        retries: 3
      register: download_result
      ignore_errors: yes

    # Fallback to shell if get_url fails
    - name: Fallback - Download GPG key via curl
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o {{ docker_gpg_key }} &&
        chmod 644 {{ docker_gpg_key }}
      args:
        executable: /bin/bash
      when: download_result is failed

    # Add Docker repository
    - name: Add Docker repository
      apt_repository:
        repo: >-
          deb [arch={{ ansible_architecture }} signed-by={{ docker_gpg_key }}]
          https://download.docker.com/linux/ubuntu
          {{ ansible_distribution_release }} stable
        filename: docker
        state: present
        update_cache: yes

    # 5. FORCE cache update after repo addition
    - name: Explicitly update apt cache
      apt:
        update_cache: yes
        force_apt_get: yes  # Bypass apt alias if present

    # Install Docker packages
    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    # Verify Docker installation
    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Show Docker version
      debug:
        msg: "{{ docker_version.stdout }}"

    # Verify Docker Compose installation
    - name: Verify Docker Compose installation
      command: docker compose version
      register: docker_compose_version
      changed_when: false

    - name: Show Docker Compose version
      debug:
        msg: "{{ docker_compose_version.stdout }}"
